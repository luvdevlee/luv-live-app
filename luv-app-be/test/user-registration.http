### Test User Registration API
POST http://localhost:3000/graphql
Content-Type: application/json

{
  "query": "mutation RegisterUser($input: RegisterUserDto!) { registerUser(registerUserDto: $input) { _id username email role created_at } }",
  "variables": {
    "input": {
      "username": "testuser123",
      "email": "testuser123@example.com",
      "password": "TestPassword123!",
      "display_name": "Test User"
    }
  }
}

### Test Get User by Username
POST http://localhost:3000/graphql
Content-Type: application/json

{
  "query": "query GetUserByUsername($username: String!) { userByUsername(username: $username) { _id username email display_name role created_at } }",
  "variables": {
    "username": "testuser123"
  }
}

### Test Get Current User (requires authentication)
POST http://localhost:3000/graphql
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "query GetCurrentUser { me { _id username email display_name role last_login_at created_at } }"
}

### Test Update Profile (requires authentication)
POST http://localhost:3000/graphql
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "mutation UpdateProfile($input: UpdateUserDto!) { updateMyProfile(updateUserDto: $input) { _id username display_name avatar_url updated_at } }",
  "variables": {
    "input": {
      "display_name": "Updated Display Name",
      "avatar_url": "https://example.com/avatar.jpg"
    }
  }
}

### Test Change Password (requires authentication)
POST http://localhost:3000/graphql
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "mutation ChangePassword($oldPassword: String!, $newPassword: String!) { changePassword(oldPassword: $oldPassword, newPassword: $newPassword) }",
  "variables": {
    "oldPassword": "TestPassword123!",
    "newPassword": "NewTestPassword123!"
  }
}

### Test User Stats (admin only)
POST http://localhost:3000/graphql
Content-Type: application/json
Authorization: Bearer YOUR_ADMIN_JWT_TOKEN_HERE

{
  "query": "query GetUserStats { userStats { totalUsers activeUsers streamers viewers admins } }"
}

### Test Registration with Invalid Data (should fail)
POST http://localhost:3000/graphql
Content-Type: application/json

{
  "query": "mutation RegisterUserInvalid($input: RegisterUserDto!) { registerUser(registerUserDto: $input) { _id username email } }",
  "variables": {
    "input": {
      "username": "ab",
      "email": "invalid-email",
      "password": "weak"
    }
  }
}

### Test Duplicate Registration (should fail)
POST http://localhost:3000/graphql
Content-Type: application/json

{
  "query": "mutation RegisterDuplicate($input: RegisterUserDto!) { registerUser(registerUserDto: $input) { _id username email } }",
  "variables": {
    "input": {
      "username": "testuser123",
      "email": "testuser123@example.com",
      "password": "TestPassword123!"
    }
  }
}
